% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shorten.R
\name{shorten}
\alias{shorten}
\title{Remove characters from the start of an OLC code}
\usage{
shorten(
  code,
  latitude,
  longitude,
  padding_character_ = "0",
  min_trimmable_code_length_ = 6,
  pair_resolutions_ = c(20, 1, 0.05, 0.0025, 0.000125)
)
}
\arguments{
\item{code}{Open Location Code. Character}

\item{latitude}{A latitude in signed decimal degrees. Will be clipped to the range -90 to 90}

\item{longitude}{A longitude in signed decimal degrees. Will be normalised to the range -180 to 180}

\item{padding_character_}{Regular expression denoting the padding character. Usually '0'}

\item{min_trimmable_code_length_}{Minimum length of a code that can be shortened}

\item{pair_resolutions_}{The resolution values in degrees for each position in the lat/lng pair encoding. These give the place value of each position, and therefore the dimensions of the resulting area}
}
\value{
Either the original code, if the reference location was not close enough, or the trimmed code.
}
\description{
This uses a reference location to determine how many initial characters can be removed from the OLC code. The number of characters that can be removed depends on the distance between the code center and the reference location. The minimum number of characters that will be removed is four. If more than four characters can be removed, the additional characters will be replaced with the padding character. At most eight characters will be removed. The reference location must be within 50\% of the maximum range. This ensures that the shortened code will be able to be recovered using slightly different locations.
}
\examples{
shorten('8FVC9G8F+6X', 47.5, 8.5)
}
