% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decode.R
\name{decode}
\alias{decode}
\title{Decode an Open Location Code into location coordinates}
\usage{
decode(
  code,
  latitude_max_ = 90,
  longitude_max_ = 180,
  max_digit_count_ = 15,
  code_alphabet_ = "23456789CFGHJMPQRVWX",
  encoding_base_ = nchar(code_alphabet_),
  pair_precision_ = encoding_base_^3,
  pair_code_length_ = 10,
  pair_first_place_value_ = encoding_base_^(pair_code_length_/2 - 1),
  grid_columns_ = 4,
  grid_rows_ = 5,
  grid_lat_first_place_value_ = grid_rows_^((max_digit_count_ - pair_code_length_) - 1),
  grid_lng_first_place_value_ = grid_columns_^((max_digit_count_ - pair_code_length_) -
    1),
  final_lat_precision_ = pair_precision_ * grid_rows_^(max_digit_count_ -
    pair_code_length_),
  final_lng_precision_ = pair_precision_ * grid_columns_^(max_digit_count_ -
    pair_code_length_)
)
}
\arguments{
\item{code}{Open Location Code. Character}

\item{latitude_max_}{The maximum value for latitude in degrees}

\item{longitude_max_}{The maximum value for longitude in degrees}

\item{max_digit_count_}{The max number of digits to process in a plus code}

\item{code_alphabet_}{The character set used to encode the values}

\item{encoding_base_}{The base to use to convert numbers to/from}

\item{pair_precision_}{Inverse of the precision of the pair section of the code}

\item{pair_code_length_}{Maximum code length using lat/lng pair encoding. Excludes prefix and separator characters}

\item{pair_first_place_value_}{First place value of the pairs (if the last pair value is 1)}

\item{grid_columns_}{Number of columns in the grid refinement method}

\item{grid_rows_}{Number of rows in the grid refinement method}

\item{grid_lat_first_place_value_}{First place value of the latitude grid (if the last place is 1)}

\item{grid_lng_first_place_value_}{First place value of the longitude grid (if the last place is 1)}

\item{final_lat_precision_}{Multiply latitude by this much to make it a multiple of the finest precision}

\item{final_lng_precision_}{Multiply longitude by this much to make it a multiple of the finest precision}
}
\value{
A code_area object which contains the original code, code length, center coordinates and an sf polygon
}
\description{
Given an Open Location Code, this function will return a codeArea object which is essentially a polygon that represents the area on the ground that the code refers to
}
\examples{
decode("8FVC9G8F+6X")
}
